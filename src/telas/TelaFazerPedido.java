package telas;

import atendente.Atendente;
import cliente.Cliente;
import cliente.DadosCliente;
import cliente.RegrasCliente;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import java.util.Date;
import javax.swing.SwingConstants;
import pedido.DadosPedido;
import pedido.Pedido;
import pedido.RegrasPedido;
import produto.DadosProduto;
import produto.Produto;
import produto.RegrasProduto;
import tipo.Tipo;

public class TelaFazerPedido extends javax.swing.JFrame {

    DadosCliente dadosCliente = new DadosCliente();
    Cliente cliente = new Cliente();
    RegrasCliente regrasCliente = new RegrasCliente();

    DadosProduto dadosProduto = new DadosProduto();
    Produto produto = new Produto();
    RegrasProduto regrasProduto = new RegrasProduto();

    private static void addRow(Object[] object) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public TelaFazerPedido() {
        initComponents();
        setLocationRelativeTo(null);
        CarregarProdutos();

        //Coloca os nomes sob os icones dos botões centrais.
        jbIncluir.setVerticalTextPosition(SwingConstants.BOTTOM);
        jbIncluir.setHorizontalTextPosition(SwingConstants.CENTER);
        jbRetirar.setVerticalTextPosition(SwingConstants.BOTTOM);
        jbRetirar.setHorizontalTextPosition(SwingConstants.CENTER);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jbAtualizarCardapio = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtProdutos = new javax.swing.JTable();
        jtfObservacao = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jbFinalizarPedido = new javax.swing.JButton();
        jbCancelarPedido = new javax.swing.JButton();
        jbIncluir = new javax.swing.JButton();
        jbRetirar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtPedido = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jtValorTotal = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jNomeCliente = new javax.swing.JLabel();
        jtfNome = new javax.swing.JTextField();
        jtfCPF = new javax.swing.JFormattedTextField();
        jNomeCliente1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("TELA DE PEDIDO");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(19, 18, 19));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        jbAtualizarCardapio.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jbAtualizarCardapio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lanchonete/imagens/icons8-actualizar-40.png"))); // NOI18N
        jbAtualizarCardapio.setText("ATUALIZAR LISTA");
        jbAtualizarCardapio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtualizarCardapioActionPerformed(evt);
            }
        });

        jtProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod.", "Descrição", "Valor(R$)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jtProdutos);
        if (jtProdutos.getColumnModel().getColumnCount() > 0) {
            jtProdutos.getColumnModel().getColumn(0).setMinWidth(100);
            jtProdutos.getColumnModel().getColumn(0).setPreferredWidth(100);
            jtProdutos.getColumnModel().getColumn(0).setMaxWidth(100);
            jtProdutos.getColumnModel().getColumn(2).setMinWidth(200);
            jtProdutos.getColumnModel().getColumn(2).setPreferredWidth(200);
            jtProdutos.getColumnModel().getColumn(2).setMaxWidth(200);
        }

        jtfObservacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfObservacaoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("OBSERVAÇÃO:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jbAtualizarCardapio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
            .addComponent(jtfObservacao)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbAtualizarCardapio, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfObservacao, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        jbFinalizarPedido.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbFinalizarPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lanchonete/imagens/completed-task(2).png"))); // NOI18N
        jbFinalizarPedido.setText("Finalizar Pedido");
        jbFinalizarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFinalizarPedidoActionPerformed(evt);
            }
        });

        jbCancelarPedido.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbCancelarPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lanchonete/imagens/icons8-cancelar-34.png"))); // NOI18N
        jbCancelarPedido.setText("Cancelar");
        jbCancelarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarPedidoActionPerformed(evt);
            }
        });

        jbIncluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lanchonete/imagens/icons8-avançar-50.png"))); // NOI18N
        jbIncluir.setText("INCLUIR");
        jbIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbIncluirActionPerformed(evt);
            }
        });

        jbRetirar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lanchonete/imagens/icons8-voltar-50.png"))); // NOI18N
        jbRetirar.setText("EXCLUIR");
        jbRetirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRetirarActionPerformed(evt);
            }
        });

        jtPedido.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod.", "Quant", "Descrição", "Valor(R$)", "Total(R$)", "Obs."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtPedido);
        if (jtPedido.getColumnModel().getColumnCount() > 0) {
            jtPedido.getColumnModel().getColumn(0).setMinWidth(55);
            jtPedido.getColumnModel().getColumn(0).setPreferredWidth(55);
            jtPedido.getColumnModel().getColumn(0).setMaxWidth(55);
            jtPedido.getColumnModel().getColumn(1).setMinWidth(70);
            jtPedido.getColumnModel().getColumn(1).setPreferredWidth(70);
            jtPedido.getColumnModel().getColumn(1).setMaxWidth(70);
            jtPedido.getColumnModel().getColumn(2).setMinWidth(250);
            jtPedido.getColumnModel().getColumn(2).setPreferredWidth(250);
            jtPedido.getColumnModel().getColumn(2).setMaxWidth(250);
            jtPedido.getColumnModel().getColumn(3).setMinWidth(65);
            jtPedido.getColumnModel().getColumn(3).setPreferredWidth(65);
            jtPedido.getColumnModel().getColumn(3).setMaxWidth(65);
            jtPedido.getColumnModel().getColumn(4).setMinWidth(65);
            jtPedido.getColumnModel().getColumn(4).setPreferredWidth(65);
            jtPedido.getColumnModel().getColumn(4).setMaxWidth(65);
        }

        jLabel1.setBackground(java.awt.Color.white);
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ITENS DO PEDIDO");

        jtValorTotal.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jtValorTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtValorTotalActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextField1.setText("R$");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));

        jNomeCliente.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jNomeCliente.setForeground(new java.awt.Color(255, 255, 255));
        jNomeCliente.setText("NOME:");

        jtfNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNomeActionPerformed(evt);
            }
        });

        jNomeCliente1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jNomeCliente1.setForeground(new java.awt.Color(255, 255, 255));
        jNomeCliente1.setText("CPF:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfNome)
                .addGap(43, 43, 43)
                .addComponent(jNomeCliente1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNomeCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jbIncluir)
                                    .addComponent(jbRetirar))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jbCancelarPedido)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jbFinalizarPedido))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(240, 240, 240)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(196, 196, 196)
                                .addComponent(jbIncluir)
                                .addGap(62, 62, 62)
                                .addComponent(jbRetirar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbCancelarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbFinalizarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 761, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNomeActionPerformed

    private void jtValorTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtValorTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtValorTotalActionPerformed

    private void jbCancelarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarPedidoActionPerformed
        // Se o botão cancelar for apertado ele limpa os campos da tela e desabilita alguns botões:
        limparCampos();
    }//GEN-LAST:event_jbCancelarPedidoActionPerformed

    private void jbFinalizarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFinalizarPedidoActionPerformed
        // Salva as informações do pedido no banco de dados:

        try {

            Pedido pedido = new Pedido();
            DadosPedido dadosPedido = new DadosPedido();
            Atendente atendente = new Atendente();

            RegrasPedido regrasPedido = new RegrasPedido();

            pedido.setData(converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));

            pedido.setObservacao(jtfObservacao.getText());

            cliente.setNome(jtfNome.getText());
            cliente.setCpf(jtfCPF.getText());

            regrasCliente.cadastrarCliente(cliente);

            int id = dadosCliente.retornaIdCliente();
            cliente.setCod_cliente(id);

            pedido.setCliente(cliente);

            int linhas = jtPedido.getRowCount();

            for (int i = 0; i < linhas; i++) {
                pedido.setObservacao((String) jtPedido.getValueAt(i, 5));
                pedido.setQuantidade((int) jtPedido.getValueAt(i, 1));

                produto.setCod_produto((int) jtPedido.getValueAt(i, 0));
                produto.setNome((String) jtPedido.getValueAt(i, 2));
                produto.setValorUnitario((double) jtPedido.getValueAt(i, 3));

                pedido.setProduto(produto);

                //Assim que o pedido é criado, o atendente é setado com a chave 1 = SEM ATENDENTE.
                atendente.setMatricula(1);

                pedido.setAtendente(atendente);

                regrasPedido.cadastraPedido(pedido);

            }

        } catch (Exception ex) {
            Logger.getLogger(TelaFazerPedido.class.getName()).log(Level.SEVERE, null, ex);
        }

        limparCampos();


    }//GEN-LAST:event_jbFinalizarPedidoActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jbIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbIncluirActionPerformed
        // TODO add your handling code here:
        Pedido pedido = new Pedido();
        DadosPedido dadosPedido = new DadosPedido();

        int quantidade = 0;
        int controlador = 0;

        try {

            int linhas = jtPedido.getRowCount();

            // Se item tiver sido incluido no pedido entra nesse if.
            if (linhas == 0) {
                int linha = jtProdutos.getSelectedRow();

                produto.setCod_produto((int) jtProdutos.getValueAt(linha, 0));
                produto.setNome((String) jtProdutos.getValueAt(linha, 1));
                double valoratual = (double) jtProdutos.getValueAt(linha, 2);
                pedido.setValorAtual(valoratual);

                pedido.setProduto(produto);

                quantidade = 1;

                double valorTotal = quantidade * valoratual;

                DefaultTableModel modelo = (DefaultTableModel) jtPedido.getModel();

                //Inserindo uma nova linha na tabela
                int cont = 0;
                for (int i = 0; i < cont; i++) {
                    modelo.setNumRows(0);
                }

                //Inseri o produto selecionado na tabela Pedido.
                modelo.setColumnIdentifiers(new Object[]{"Cod.", "Quant", "Descrição", "Valor(R$)", "Total(R$)", "Obs."});
                modelo.addRow(new Object[]{pedido.getProduto().getCod_produto(), quantidade, pedido.getProduto().getNome(), pedido.getValorAtual(), valorTotal, jtfObservacao.getText()});
                jtPedido.setModel(modelo);
                somarValorTotal();
                //fim do se
            }

            // Se algum item já foi selecionado entra nesse if.
            if (linhas != 0) {
                int linha = jtProdutos.getSelectedRow();
                produto.setCod_produto((int) jtProdutos.getValueAt(linha, 0));
                produto.setNome((String) jtProdutos.getValueAt(linha, 1));
                pedido.setValorAtual((double) jtProdutos.getValueAt(linha, 2));
                pedido.setProduto(produto);

                String produtoSelecionado = pedido.getProduto().getNome();
                linhas = jtPedido.getRowCount();

                // Esse for vai passar por todos os itens da tabela pedido para verificar se o item já foi escolhido
                // Se o item já foi escolhido vai ser acrescentada a quantidade e não criada uma nova linha.
                for (int i = 0; i < linhas; i++) {
                    String produtoPedido = (String) jtPedido.getValueAt(i, 2);
                    //Se o produto selecionado já estiver na tabela pedido ele apenas acrescenta a quantidade.
                    if (produtoSelecionado.equals(produtoPedido)) {
                        controlador = 1;
                        quantidade = (int) jtPedido.getValueAt(i, 1);
                        quantidade = quantidade + 1;

                        double valorTotal = quantidade * pedido.getValorAtual();

                        jtPedido.getSelectionModel().addSelectionInterval(i, i);
                        ((DefaultTableModel) jtPedido.getModel()).removeRow(i);

                        DefaultTableModel modelo = (DefaultTableModel) jtPedido.getModel();
                        //Inserindo uma nova linha na tabela
                        int cont = 0;
                        for (int j = 0; j < cont; j++) {
                            modelo.setNumRows(0);
                        }
                        //Inseri o produto selecionado na tabela Pedido.
                        modelo.setColumnIdentifiers(new Object[]{"Cod.", "Quant", "Descrição", "Valor(R$)", "Total(R$)", "Obs."});
                        modelo.addRow(new Object[]{pedido.getProduto().getCod_produto(), quantidade, pedido.getProduto().getNome(), pedido.getValorAtual(), valorTotal, jtfObservacao.getText()});
                        jtPedido.setModel(modelo);
                        somarValorTotal();

                        break;

                    }

                }

                //Se o item não está na tabela pedido ele cria uma nova linha.
                if ((controlador != 1)) {
                    linha = jtProdutos.getSelectedRow();

                    produto.setCod_produto((int) jtProdutos.getValueAt(linha, 0));
                    produto.setNome((String) jtProdutos.getValueAt(linha, 1));
                    pedido.setValorAtual((double) jtProdutos.getValueAt(linha, 2));

                    pedido.setProduto(produto);

                    quantidade = 1;

                    DefaultTableModel modelo = (DefaultTableModel) jtPedido.getModel();

                    //Inserindo uma nova linha na tabela
                    int cont = 0;
                    for (int i = 0; i < cont; i++) {
                        modelo.setNumRows(0);
                    }

                    //Inseri o produto selecionado na tabela Pedido.
                    modelo.setColumnIdentifiers(new Object[]{"Cod.", "Quant", "Descrição", "Valor(R$)", "Total(R$)", "Obs."});
                    modelo.addRow(new Object[]{pedido.getProduto().getCod_produto(), quantidade, pedido.getProduto().getNome(), pedido.getValorAtual(), pedido.getValorAtual(), jtfObservacao.getText()});
                    jtPedido.setModel(modelo);
                    somarValorTotal();
                }

            }

            jtfObservacao.setText("");

        } catch (Exception ex) {
            Logger.getLogger(TelaCadastraProdutos.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jbIncluirActionPerformed

    private void jbAtualizarCardapioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtualizarCardapioActionPerformed
        // Atualiza o cardápio e preços na tela de pedidos:
        CarregarProdutos();
    }//GEN-LAST:event_jbAtualizarCardapioActionPerformed

    private void jtfObservacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfObservacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfObservacaoActionPerformed

    private void jbRetirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRetirarActionPerformed
        // Diminui a quantidade ou retira itens da tabela (Se a quantidade for 1):
        DefaultTableModel deletaItem = (DefaultTableModel) jtPedido.getModel();
        int linha = jtPedido.getSelectedRow();

        int quantidade = (int) jtPedido.getValueAt(linha, 1);

        //Se a quantidade for 1 ele simplesmente apaga a linha.
        if (quantidade == 1) {
            jtPedido.removeRowSelectionInterval(linha, linha);
        }

        //Se a quantidade for maior que um vai retirando 1 a cada click no botão.
        if (quantidade != 1) {

            int codProduto = (int) jtPedido.getValueAt(linha, 0);
            int quantidadePedido = (int) jtPedido.getValueAt(linha, 1);
            String nomePedido = (String) jtPedido.getValueAt(linha, 2);
            Double valorPedido = (Double) jtPedido.getValueAt(linha, 3);
            String obs = (String) jtPedido.getValueAt(linha, 5);

            quantidadePedido = quantidadePedido - 1;

            Double total = quantidadePedido * valorPedido;

            DefaultTableModel modelo = (DefaultTableModel) jtPedido.getModel();

            //Inserindo uma nova linha na tabela
            int cont = 0;
            for (int i = 0; i < cont; i++) {
                modelo.setNumRows(0);
            }

            //Inseri o produto selecionado na tabela Pedido.
            modelo.setColumnIdentifiers(new Object[]{"Cod.", "Quant", "Descrição", "Valor(R$)", "Total(R$)", "Obs."});
            modelo.addRow(new Object[]{codProduto, quantidadePedido, nomePedido, valorPedido, total, obs});
            jtPedido.setModel(modelo);

        }
        
        //Remove a linha selecionado na tabela pedido. Pq sempre é criada uma nova linha com a quantidade.
        deletaItem.removeRow(linha);

        somarValorTotal();


    }//GEN-LAST:event_jbRetirarActionPerformed

    /**
     * Converte data tipo date para o formato americano yyyy/MM/dd também tipo
     * date Date para Date
     *
     * @param pData
     * @return
     * @throws Exception
     */
    public java.sql.Date converterDataParaDateUS(Date pData) throws Exception {
        SimpleDateFormat formatarDate = new SimpleDateFormat("yyyy/MM/dd");
        String dataString = formatarDate.format(pData);
        if (pData == null || pData.equals("")) {
            return null;
        }

        java.sql.Date date = null;
        try {
            DateFormat formatter = new SimpleDateFormat("yyyy/MM/dd");
            date = new java.sql.Date(((java.util.Date) formatter.parse(dataString)).getTime());
        } catch (ParseException e) {
            throw e;
        }
        return date;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaFazerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaFazerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaFazerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaFazerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaFazerPedido().setVisible(true);
            }
        });
    }

    /**
     * vai somando os valores na medida que os produtos são adicinados.
     */
    private void somarValorTotal() {
        double soma = 0;
        int cont = jtPedido.getRowCount();
        for (int i = 0; i < cont; i++) {
            double valor = (double) jtPedido.getValueAt(i, 4);
            soma += valor;
        }
        jtValorTotal.setText(String.valueOf(soma));
    }


    /*
    Limpa os dados da tela e da tabela.
     */
    private void limparCampos() {
        jtfNome.setText("");
        jtValorTotal.setText("");
        jtfCPF.setText("");
        jtfObservacao.setText("");

        DefaultTableModel modelo = (DefaultTableModel) jtPedido.getModel();
        modelo.setNumRows(0);

    }

    /**
     * Carrega os produtos na tela para que possam ser escolhidos para a tabela pedido.
     */
    private void CarregarProdutos() {
        try {
            Produto produto = new Produto();
            DadosProduto dadosProduto = new DadosProduto();
            ArrayList<Produto> listaProdutos = new ArrayList<>();

            listaProdutos = dadosProduto.listarProduto();

            DefaultTableModel modelo = new DefaultTableModel();
            modelo.setColumnIdentifiers(new Object[]{"Cod.", "Descrição", "Valor(R$)"});
            for (Produto p : listaProdutos) {
                modelo.addRow(new Object[]{p.getCod_produto(), p.getNome(), p.getValorUnitario()});
            }

            jtProdutos.setModel(modelo);

        } catch (Exception e) {
        }
    }




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jNomeCliente;
    private javax.swing.JLabel jNomeCliente1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton jbAtualizarCardapio;
    private javax.swing.JButton jbCancelarPedido;
    private javax.swing.JButton jbFinalizarPedido;
    private javax.swing.JButton jbIncluir;
    private javax.swing.JButton jbRetirar;
    private javax.swing.JTable jtPedido;
    private javax.swing.JTable jtProdutos;
    private javax.swing.JTextField jtValorTotal;
    private javax.swing.JFormattedTextField jtfCPF;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JTextField jtfObservacao;
    // End of variables declaration//GEN-END:variables

}
